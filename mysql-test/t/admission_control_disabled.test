#
# test admission_control_disabled code paths
#
--source include/have_debug.inc

call mtr.add_suppression("admission_control disabled.*");

show global variables like "admission_control";
show global status like "Control_admission_disabled";

grant all on *.* to 'adminc1'@'%' with max_concurrent_queries 1 max_user_connections 100;
grant all on *.* to 'adminc2'@'%' with max_concurrent_queries 1 max_user_connections 100;
grant all on *.* to 'adminc3'@'%' with max_concurrent_queries 1 max_user_connections 100;
grant all on *.* to 'adminc4'@'%' with max_concurrent_queries 1 max_user_connections 100;
grant all on *.* to 'adminc5'@'%' with max_concurrent_queries 1 max_user_connections 100;

#
--echo test bad state on entry to admission_control_enter
#

connect (c1, localhost, adminc1,,);
select 1;

SET DEBUG="d,ac_enter_bad_state";
select 1;

connection default;
--echo admission_control should be disabled
show global variables like "admission_control";
show global status like "Control_admission_disabled";

disconnect c1;
--echo sleep long enough that disconnect will be done
sleep 1;

--echo enable admission_control
SET DEBUG="d,enable_admission_control";
select 1;
SET DEBUG="reset";
show global status like "Control_admission_disabled";

#
--echo test bad value of queries_waiting in admission_control_entry
#

connect (c1, localhost, adminc2,,);
select 1;

# This blocks for two seconds without giving up admission_control entry
--echo connection two does select that sleeps
connect (c2, localhost, adminc2,,);
SET DEBUG_SYNC='in_sleep_func SIGNAL i_am_sleeping';
SET DEBUG='d,ac_sleep_stall';
send select sleep(2);

# This blocks until the previous statement finishes
--echo connection one waits for two seconds
connection c1;
SET DEBUG_SYNC='now WAIT_FOR i_am_sleeping';
SET DEBUG="d,ac_enter_bad_waiting";
select 1;

connection c2;
reap;
SET DEBUG='RESET';

connection default;
--echo admission_control should be disabled
show global variables like "admission_control";
show global status like "Control_admission_disabled";

disconnect c1;
disconnect c2;
--echo sleep long enough that disconnect will be done
sleep 1;

--echo enable admission_control
SET DEBUG="d,enable_admission_control";
select 1;
SET DEBUG="reset";
show global status like "Control_admission_disabled";

#
--echo test bad value for queries_running in admission_control_exit
#

connect (c1, localhost, adminc3,,);
select 1;
SET DEBUG="d,ac_exit_bad_running";
select 1;

connection default;
--echo admission_control should be disabled
show global variables like "admission_control";
show global status like "Control_admission_disabled";

disconnect c1;
--echo sleep long enough that disconnect will be done
sleep 1;

--echo enable admission_control
SET DEBUG="d,enable_admission_control";
select 1;
SET DEBUG="reset";
show global status like "Control_admission_disabled";

#
--echo test bad state in admission_control_exit
#

connect (c1, localhost, adminc4,,);
select 1;
SET DEBUG="d,ac_exit_bad_state";
select 1;

connection default;
--echo admission_control should be disabled
show global variables like "admission_control";
show global status like "Control_admission_disabled";

disconnect c1;

#
--echo confirm admission_control is ignored when disabled
#

connect (c1, localhost, adminc5,,);
connect (c2, localhost, adminc5,,);

show global status like "Control_admission_disabled";

select variable_value into @waits1 from information_schema.global_status
where variable_name = 'Control_admission_waits';

# This blocks for two seconds without giving up admission_control entry
--echo connection two does select that sleeps
SET DEBUG_SYNC='in_sleep_func SIGNAL i_am_sleeping';
SET DEBUG='d,ac_sleep_stall';
send select sleep(2);

# This blocks until the previous statement finishes
connection default;
select now() into @t1;

--echo connection does not wait
connection c1;
SET DEBUG_SYNC='now WAIT_FOR i_am_sleeping';
select 1;

connection default;
select now() into @t2;
select (@t2 - @t1) < 1;

connection c2;
reap;
SET DEBUG='RESET';
select variable_value into @waits2 from information_schema.global_status
where variable_name = 'Control_admission_waits';
--echo should be 0 waits
select @waits2 - @waits1;

#
--echo cleanup
#

connection default;
disconnect c1;
disconnect c2;
drop user 'adminc1'@'%';
drop user 'adminc2'@'%';
drop user 'adminc3'@'%';
drop user 'adminc4'@'%';
drop user 'adminc5'@'%';

--echo sleep long enough that disconnect will be done
sleep 1;
--echo reset admission_control_disabled
SET DEBUG="d,enable_admission_control";
select 1;
show global variables like "admission_control";
show global status like "Control_admission_disabled";

SET DEBUG_SYNC= 'RESET';
SET DEBUG='RESET';
