#
# Test group commit
#

# requirements
--source include/have_innodb.inc
--source include/have_log_bin.inc

# confirm the variables exist
SET GLOBAL group_commit_hang_log_seconds = default;
SET GLOBAL group_commit_hang_disable_seconds = default;
--replace_regex /[0-9]+/#/
SHOW GLOBAL VARIABLES like "group_commit_hang_log_seconds";
--replace_regex /[0-9]+/#/
SHOW GLOBAL VARIABLES like "group_commit_hang_disable_seconds";

# setup
connect(c1,127.0.0.1,root,,test,$MASTER_MYPORT,);
connect(c2,127.0.0.1,root,,test,$MASTER_MYPORT,);

--connection c1
--echo connection c1

--disable_warnings
DROP TABLE IF EXISTS t1;
--enable_warnings

CREATE TABLE t1 (k INT NOT NULL, a INT NOT NULL, b INT NOT NULL, c INT NOT NULL, PRIMARY KEY(k)) ENGINE=InnoDB;
INSERT INTO t1 (k, a, b, c) VALUES (1, 0, 0, 0);
INSERT INTO t1 (k, a, b, c) VALUES (2, 0, 0, 0);

SET GLOBAL group_commit_min_size=2;
select variable_value into @fslow1 from information_schema.global_status where variable_name='Binlog_fsync_slow';

################################################################################
echo "";
echo verify that group commit is not done when prepare_commit_mutex is used;
echo without autocommit;
echo "";
################################################################################

SET GLOBAL innodb_prepare_commit_mutex=1;
SET GLOBAL sync_binlog=1;
SET GLOBAL group_commit_timeout_usecs=900000;

select variable_value into @fsc1 from information_schema.global_status where variable_name='Binlog_fsync_count';
select variable_value into @fsg1 from information_schema.global_status where variable_name='Binlog_fsync_grouped';

--connection c1
--echo connection c1
BEGIN;
UPDATE t1 SET a=10 WHERE k=1;
--send COMMIT

  --connection c2
  --echo connection c2
  BEGIN;
  UPDATE t1 SET a=20 WHERE k=2;
  COMMIT;

--connection c1
--echo connection c1
--reap

select variable_value into @fsc2 from information_schema.global_status where variable_name='Binlog_fsync_count';
select @fsc2 - @fsc1;
select variable_value into @fsg2 from information_schema.global_status where variable_name='Binlog_fsync_grouped';
select @fsg2 - @fsg1;

################################################################################
echo "";
echo verify that group commit is not done when prepare_commit_mutex is used;
echo with autocommit;
echo "";
################################################################################

SET GLOBAL innodb_prepare_commit_mutex=1;
SET GLOBAL sync_binlog=1;
SET GLOBAL group_commit_timeout_usecs=900000;

select variable_value into @fsc1 from information_schema.global_status where variable_name='Binlog_fsync_count';
select variable_value into @fsg1 from information_schema.global_status where variable_name='Binlog_fsync_grouped';

--connection c1
--echo connection c1
--send UPDATE t1 SET a=10 WHERE k=1

  --connection c2
  --echo connection c2
  UPDATE t1 SET a=20 WHERE k=2;

--connection c1
--echo connection c1
--reap

select variable_value into @fsc2 from information_schema.global_status where variable_name='Binlog_fsync_count';
select @fsc2 - @fsc1;
select variable_value into @fsg2 from information_schema.global_status where variable_name='Binlog_fsync_grouped';
select @fsg2 - @fsg1;

################################################################################
echo "";
echo verify that rollback is OK
echo "";
################################################################################

SET GLOBAL innodb_prepare_commit_mutex=0;
SET GLOBAL sync_binlog=1;
SET GLOBAL group_commit_timeout_usecs=900000;

--connection c1
--echo connection c1
select * from t1 where k=1;
BEGIN;
UPDATE t1 SET a=15 WHERE k=1;
ROLLBACK;
select * from t1 where k=1;

################################################################################
echo "";
echo verify that group commit is not done when group_commit_min_size is not met
echo "";
################################################################################

SET GLOBAL innodb_prepare_commit_mutex=0;
SET GLOBAL sync_binlog=1;
SET GLOBAL group_commit_timeout_usecs=900000;
SET GLOBAL group_commit_min_size=3;

select variable_value into @fsc1 from information_schema.global_status where variable_name='Binlog_fsync_count';
select variable_value into @fsg1 from information_schema.global_status where variable_name='Binlog_fsync_grouped';

--connection c1
--echo connection c1
--send UPDATE t1 SET a=10 WHERE k=1

  --connection c2
  --echo connection c2
  UPDATE t1 SET a=20 WHERE k=2;

--connection c1
--echo connection c1
--reap

select variable_value into @fsc2 from information_schema.global_status where variable_name='Binlog_fsync_count';
select @fsc2 - @fsc1;
select variable_value into @fsg2 from information_schema.global_status where variable_name='Binlog_fsync_grouped';
select @fsg2 - @fsg1;

select variable_value into @fslow2 from information_schema.global_status where variable_name='Binlog_fsync_slow';
select @fslow2 - @fslow1;

################################################################################
echo "";
echo final cleanup;
echo "";
################################################################################
connection default;
disconnect c1;
disconnect c2;
DROP TABLE t1;
SET GLOBAL force_binlog_order=1;
SET GLOBAL innodb_prepare_commit_mutex=1;
SET GLOBAL sync_binlog=0;
SET GLOBAL group_commit_timeout_usecs=1000;
SET GLOBAL group_commit_min_size=8;

# clean exit
--exit
