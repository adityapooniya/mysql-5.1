#
# Test fast DROP TABLE and InnoDB insert buffer
#

--source include/have_innodb_plugin.inc
--source include/have_debug.inc

call mtr.add_suppression("InnoDB: Warning: Small buffer pool size.*");
call mtr.add_suppression("InnoDB: Error: trying to do.*");

--disable_warnings
drop table if exists t1;
drop table if exists t2;
--enable_warnings

create table t1(i int primary key auto_increment, b char(250), c char(250), d char(250)) engine=innodb;
alter table t1 add index xb(b);
alter table t1 add index xc(c);
alter table t1 add index xd(d);

create table t2(i int primary key auto_increment, b char(250), c char(250), d char(250)) engine=innodb;
alter table t2 add index xb(b);
alter table t2 add index xc(c);
alter table t2 add index xd(d);

set global innodb_allow_ibuf_merges=0;
set global innodb_ibuf_max_pct_of_buffer_pool=5;
set global innodb_ibuf_max_pct_of_io_capacity=5;

show global status like "Innodb_ibuf_size";

load data infile '../../std_data/innodb_drop_table_ibuf.dat' into table t1 fields terminated by ',';
load data infile '../../std_data/innodb_drop_table_ibuf.dat' into table t2 fields terminated by ',';

select (VARIABLE_VALUE > 10) from information_schema.global_status
where VARIABLE_NAME = 'Innodb_ibuf_size';

drop table t1;
set global innodb_allow_ibuf_merges=1;
set global innodb_ibuf_max_pct_of_buffer_pool=1;
set global innodb_ibuf_max_pct_of_io_capacity=50;

sleep 0.1;
drop table t2;

let $wait_timeout= 180;
let $wait_condition= select (VARIABLE_VALUE < 5) from information_schema.global_status where VARIABLE_NAME = 'Innodb_ibuf_size';
--source include/wait_condition.inc

select (VARIABLE_VALUE > 10) from information_schema.global_status
where VARIABLE_NAME = 'Innodb_drop_table_ibuf_skipped_row';

set global innodb_ibuf_max_pct_of_buffer_pool=default;
set global innodb_ibuf_max_pct_of_io_capacity=default;
