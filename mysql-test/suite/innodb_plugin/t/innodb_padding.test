--echo #
--echo # Testing different padding algorithms
--echo #
--source include/have_innodb.inc

# record the file format in order to restore in the end.
--disable_query_log
--let $file_format_save = `SELECT @@innodb_file_format`
--let $file_format_check_save = `SELECT @@innodb_file_format_check`
--let $padding_algo_save = `SELECT @@innodb_padding_algo`
--let $padding_linear_increment_save = `SELECT @@innodb_padding_linear_increment`
--disable_warnings
DROP TABLE IF EXISTS t1, t2;
SET GLOBAL INNODB_FILE_FORMAT = 'Barracuda';
--enable_warnings

# since this test generates lot of errors in log, suppress checking errors
call mtr.add_suppression(".*");
# no padding
--enable_query_log
SET GLOBAL innodb_padding_algo = 0;
let $num_inserts = 20000;

# create the table with compressed pages of size 1K.
CREATE TABLE t1(id INT PRIMARY KEY, msg varchar(255))
ENGINE=INNODB
ROW_FORMAT=COMPRESSED
KEY_BLOCK_SIZE=2;
let $idx = 1;
let $num_rows = $num_inserts;
--disable_query_log
while ($num_rows) {
  eval
INSERT INTO t1(id, msg)
VALUES ($idx, REPEAT(PASSWORD($idx), 5));
  if (`SELECT $num_rows = 2000`) {
    SELECT compress_ops_ok INTO @ok_before FROM information_schema.table_statistics WHERE table_name='t1';
    SELECT compress_ops INTO @ops_before FROM information_schema.table_statistics WHERE table_name='t1';
  }
  dec $num_rows;
  inc $idx;
}
SELECT (compress_ops_ok - @ok_before)/(compress_ops - @ops_before) into @nopad FROM information_schema.table_statistics WHERE table_name='t1';
--enable_query_log
# linear padding
SET GLOBAL innodb_padding_algo = 1;
SET GLOBAL innodb_padding_linear_increment = 256;
CREATE TABLE t2(id INT PRIMARY KEY, msg varchar(255))
ENGINE=INNODB
ROW_FORMAT=COMPRESSED
KEY_BLOCK_SIZE=2;
let $idx = 1;
let $num_rows = $num_inserts;
--disable_query_log
while ($num_rows) {
  eval
INSERT INTO t2(id, msg)
VALUES ($idx, REPEAT(PASSWORD($idx), 5));
  if (`SELECT $num_rows = 2000`) {
    SELECT compress_ops_ok INTO @ok_before FROM information_schema.table_statistics WHERE table_name='t2';
    SELECT compress_ops INTO @ops_before FROM information_schema.table_statistics WHERE table_name='t2';
  }
  dec $num_rows;
  inc $idx;
}
SELECT (compress_ops_ok - @ok_before)/(compress_ops - @ops_before) into @linear FROM information_schema.table_statistics WHERE table_name='t2';
--enable_result_log
CHECKSUM TABLE t1;
CHECKSUM TABLE t2;

# uncomment this line to print the padding values.
# select table_name,compress_padding,compress_ops_ok,compress_ops,compress_ops_ok/compress_ops from information_schema.table_statistics where table_name='t1' or table_name='t2' order by table_name;
# uncomment this line to print the compression success rate by each algorithm
# select @nopad, @linear;

# success rate comparison
SELECT @nopad < 0.8 as nopad_is_bad;
SELECT @nopad < @linear as linear_is_better_than_nopad;
SELECT abs(1 - @linear - @@innodb_padding_max_fail_rate) < 0.1 as linear_comp_fail_rate_is_ok;
--disable_result_log
# final cleanup
DROP TABLE t1, t2;
# restore innodb_file_format and innodb_file_format_check
eval SET GLOBAL innodb_file_format = \"$file_format_save\";
eval SET GLOBAL innodb_file_format_check = \"$file_format_check_save\";
eval SET GLOBAL innodb_padding_algo = $padding_algo_save;
eval SET GLOBAL innodb_padding_linear_increment = $padding_linear_increment_save;
--enable_query_log

# clean exit
--exit
