call mtr.add_suppression("InnoDB: Warning: Small buffer pool size.*");
call mtr.add_suppression("InnoDB: Error: trying to do.*");
drop table if exists t1;
drop table if exists t2;
create table t1(i int primary key auto_increment, b char(250), c char(250), d char(250)) engine=innodb;
alter table t1 add index xb(b);
alter table t1 add index xc(c);
alter table t1 add index xd(d);
create table t2(i int primary key auto_increment, b char(250), c char(250), d char(250)) engine=innodb;
alter table t2 add index xb(b);
alter table t2 add index xc(c);
alter table t2 add index xd(d);
set global innodb_allow_ibuf_merges=0;
set global innodb_ibuf_max_pct_of_buffer_pool=5;
set global innodb_ibuf_max_pct_of_io_capacity=5;
show global status like "Innodb_ibuf_size";
Variable_name	Value
Innodb_ibuf_size	1
load data infile '../../std_data/innodb_drop_table_ibuf.dat' into table t1 fields terminated by ',';
load data infile '../../std_data/innodb_drop_table_ibuf.dat' into table t2 fields terminated by ',';
select (VARIABLE_VALUE > 10) from information_schema.global_status
where VARIABLE_NAME = 'Innodb_ibuf_size';
(VARIABLE_VALUE > 10)
1
drop table t1;
set global innodb_allow_ibuf_merges=1;
set global innodb_ibuf_max_pct_of_buffer_pool=1;
set global innodb_ibuf_max_pct_of_io_capacity=50;
drop table t2;
select (VARIABLE_VALUE > 10) from information_schema.global_status
where VARIABLE_NAME = 'Innodb_drop_table_ibuf_skipped_row';
(VARIABLE_VALUE > 10)
1
set global innodb_ibuf_max_pct_of_buffer_pool=default;
set global innodb_ibuf_max_pct_of_io_capacity=default;
