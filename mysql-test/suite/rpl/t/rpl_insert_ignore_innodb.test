-- source include/not_ndb_default.inc
-- source include/have_innodb.inc
-- source include/master-slave.inc

--connection master
eval CREATE TABLE t1 (
 a int unsigned not null auto_increment primary key,
 b int unsigned,
 unique (b)
) ENGINE=innodb;

eval CREATE TABLE t2 (
 a int unsigned, # to force INSERT SELECT to have a certain order
 b int unsigned
) ENGINE=innodb;


INSERT INTO t1 VALUES (NULL, 1);
INSERT INTO t1 VALUES (NULL, 2);
INSERT INTO t1 VALUES (NULL, 3);
INSERT INTO t1 VALUES (NULL, 4);

INSERT INTO t2 VALUES (1, 1);
INSERT INTO t2 VALUES (2, 2);
INSERT INTO t2 VALUES (3, 3);
INSERT INTO t2 VALUES (4, 4);

--echo Should return 4
select count(*) from t1;

let $m_pos1 = query_get_value("SHOW MASTER STATUS", Position, 1);

INSERT IGNORE INTO t1 SELECT NULL, t2.b FROM t2 ORDER BY t2.a;

--echo In SBR or MIXED modes, the event in the binlog should be the same that was executed. In RBR mode, binlog position should stay unchanged.
let $m_pos2 = query_get_value("SHOW MASTER STATUS", Position, 1);

--echo The binlog position must not have advanced for row and must advance otherwise

if (`SELECT @@BINLOG_FORMAT = 'ROW'`)
{
--disable_query_log
eval select $m_pos2 - $m_pos1 = 0 as result;
--enable_query_log
}

if (`SELECT @@BINLOG_FORMAT != 'ROW'`)
{
--disable_query_log
eval select $m_pos2 - $m_pos1 > 0 as result;
--enable_query_log
}

--echo Should return 4
select count(*) from t1;

SELECT * FROM t1 ORDER BY a;

sync_slave_with_master;
SELECT * FROM t1 ORDER BY a;

connection master;
drop table t1, t2;
sync_slave_with_master;
